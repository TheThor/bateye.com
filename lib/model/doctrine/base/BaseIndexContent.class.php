<?php

/**
 * BaseIndexContent
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $newsletter
 * @property string $catalogue
 * @property array $thebrand
 * @property array $thedesigner
 * 
 * @method integer      getId()          Returns the current record's "id" value
 * @method string       getNewsletter()  Returns the current record's "newsletter" value
 * @method string       getCatalogue()   Returns the current record's "catalogue" value
 * @method array        getThebrand()    Returns the current record's "thebrand" value
 * @method array        getThedesigner() Returns the current record's "thedesigner" value
 * @method IndexContent setId()          Sets the current record's "id" value
 * @method IndexContent setNewsletter()  Sets the current record's "newsletter" value
 * @method IndexContent setCatalogue()   Sets the current record's "catalogue" value
 * @method IndexContent setThebrand()    Sets the current record's "thebrand" value
 * @method IndexContent setThedesigner() Sets the current record's "thedesigner" value
 * 
 * @package    bateye
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseIndexContent extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('index_content');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('newsletter', 'string', 500, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 500,
             ));
        $this->hasColumn('catalogue', 'string', 500, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 500,
             ));
        $this->hasColumn('thebrand', 'array', null, array(
             'type' => 'array',
             'notnull' => true,
             ));
        $this->hasColumn('thedesigner', 'array', null, array(
             'type' => 'array',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}